--1.Проверить работу описанной установки SET QUOTED_IDENTIFIER. 
SET QUOTED_IDENTIFIER ON /*OFF*/ 
-----------------------------------------------------------------------------------------------
--2.Проверить работу описанной установки SET DATEFIRST. 
SET DATEFIRST 1
SELECT @@DATEFIRST [First day of week]
-----------------------------------------------------------------------------------------------
--3.Объявить переменную Perem1 типа денежный, а переменную Perem2 типа число с целой частью 
--равной 8 и дробной частью равной 2. 
DECLARE @Perem1 MONEY
DECLARE @Perem2 DECIMAL (10,2)
	SET @Perem2 = 10802145.987498461
	SELECT @Perem2 [Переменная Perem2]
-----------------------------------------------------------------------------------------------
--4.Объявить переменную Perem1 типа строка длиной 100, а переменную Perem2 типа длинное целое. 
DECLARE @Perem3 CHAR(100)
DECLARE @Perem4 BIGINT
-----------------------------------------------------------------------------------------------
--5.Объявить переменную Perem1 типа динамическая строка с максимальной длиной 1000, 
--а переменную Perem2 типа целое число. 
DECLARE @Perem5 VARCHAR(1000)
DECLARE @Perem6 INT
-----------------------------------------------------------------------------------------------
--6.Объявить переменную Perem1 типа строка длиной 30, а переменную Perem2 типа число 
--с целой частью равной 10 и дробной частью равной 3. 
DECLARE @Perem7 CHAR(30)
DECLARE @Perem8 NUMERIC(13,3)
	SET @Perem8 = 1234567890.987498461
	SELECT @Perem8 [Переменная Perem8]
-----------------------------------------------------------------------------------------------
--7.Объявить переменную Perem1 типа дата/ время, а переменную Perem2 типа число в диапазоне 
--от 0 до 255.
SET DATEFORMAT dmy  
DECLARE @Perem9 DateTime                
DECLARE @Perem10 TINYINT 
	SET @Perem10 = 255
	SELECT @Perem10 [Переменная @Perem10]
-----------------------------------------------------------------------------------------------
--Присвоение значений переменным и вывод значений на экран
-----------------------------------------------------------------------------------------------
--8.Подсчитать среднюю цену закупленных книг (с помощью запроса SELECT) и умножить ее на 
--значение 123,34, которое необходимо сохранить в отдельной переменной, вывести значение 
--переменной на экран. 
use DB_books
DECLARE @a DECIMAL(10,2)
DECLARE @b DECIMAL(10,2)
	SET @a = (select AVG(Cost) from Purchases)
	SET @b = @a * 123.34
SELECT @a [Результат]
SELECT @b [Результат]
-----------------------------------------------------------------------------------------------
--9.Подсчитать суммарную цену всех закупок книг, результат поместить в переменную, 
--вывести значение переменной на экран. 
USE DB_books
DECLARE @c DECIMAL(10,2)
SET @c = (select SUM(Cost) from Purchases)
SELECT @c [Суммарная цена всех закупок книг]
-----------------------------------------------------------------------------------------------
--10.Подсчитать количество книг в справочнике книг, результат поместить в переменную, 
--вывести значение переменной на экран. 
USE DB_books
DECLARE @d INT
SET @d = (select Count(*) from Books)
SELECT @d [Количество книг в справочнике]
-----------------------------------------------------------------------------------------------
--8.Определить минимальную дату рождения автора в справочнике авторов, результат поместить 
--в переменную, вывести значение переменной на экран. 
USE DB_books
DECLARE @f Date
SET @f = (select MIN(Birthday) from Authors)
SELECT @f [Минимальная дата рождения автора в справочнике авторов]

-----------------------------------------------------------------------------------------------
--Сочетание ключевых слов SET и SELECT
-----------------------------------------------------------------------------------------------
--12.Подсчитать количество поставщиков книг, результат поме-стить в переменную. 
USE DB_books
DECLARE @e INT
SET @e = (select Count(*) from Deliveries)
SELECT @e [Количество поставщиков книг]
-----------------------------------------------------------------------------------------------
--13.Подсчитать сумму закупок книг, результат поместить в переменную. 
-----------------------------------------------------------------------------------------------
--14.Подсчитать среднюю цену в таблице покупок книг, результат поместить в переменную. 
-----------------------------------------------------------------------------------------------
--15.Подсчитать максимальную стоимость книг в закупке, резуль-тат поместить в переменную. 

-----------------------------------------------------------------------------------------------
--Работа с датой и временем
-----------------------------------------------------------------------------------------------
--16.Определить переменную Date1 типа дата/время. 
--Присвоить ей значение даты 31.12.2006 в формате dd.mm.yyyy. 
SET DATEFORMAT dmy 
DECLARE @Date1 DateTime = '31.12.2006'
	SELECT @Date1 [Результат]
-----------------------------------------------------------------------------------------------
--17.Определить переменную Date1 типа дата/время. 
--Присвоить ей значение даты 31.12.2006 в формате mm.dd.yyyy. 
SET DATEFORMAT mdy 
DECLARE @Date2 DateTime
set @Date2 = '12.31.2006'
	SELECT @Date2 [Результат]
-----------------------------------------------------------------------------------------------
--18.Определить переменную Date1 типа дата/время. Присвоить ей значение даты 31.12.2006 
--в формате yyyy.mm.dd. 
SET DATEFORMAT ymd 
DECLARE @Date3 DateTime
set @Date3 = '2006.12.31'
	SELECT @Date3 [Результат]
-----------------------------------------------------------------------------------------------
--Создание временной таблицы через переменную типа TABLE
-----------------------------------------------------------------------------------------------
--19.Создать локальную таблицу с названием TEMP и полями типа дата/время, длинное целое, 
--строка. Добавить в нее две записи с дан-ными и вывести результат на экран. 
SET DATEFORMAT dmy
DECLARE @temp TABLE(val1 DATE, val2 BIGINT default 0, str1 CHAR(30) default 'NaN')
	INSERT INTO @temp(val1, val2, str1) VALUES ('15.06.2016', 3196213, 'PASSPORT')
	INSERT INTO @temp(val1, str1) VALUES ('30.11.1987','OLEG POROHNENKO')
SELECT * FROM @temp
-----------------------------------------------------------------------------------------------
--20.Создать локальную таблицу с названием TEMP и полями типа длинное целое, строка и значением
--по умолчанию «введите что-нибудь», денежный. Добавить в нее две записи с данными и вывести 
--результат на экран.
DECLARE @tempA TABLE(val3 BIGINT, str2 CHAR(30) default 'INSERT SOMETHING...', cash MONEY)
	INSERT INTO @tempA(val3,cash) VALUES (3196213, 150000)
	INSERT INTO @tempA(str2,cash) VALUES ('MY CASH',1000)
SELECT * FROM @tempA
-----------------------------------------------------------------------------------------------
--21.Создать локальную таблицу с названием TEMP и полями типа целое, динамическая строка, 
--бит со значением по умолчанию «1». Добавить в нее две записи с данными и вывести результат на экран. 
DECLARE @tempB TABLE(val4 INT, str3 VARCHAR(30) default 'NaN', val5 BIT default 1)
	INSERT INTO @tempB(val4,str3) VALUES (3196213, 'PASSPORT')
	INSERT INTO @tempB(val4,str3,val5) VALUES (7706863,'MTS', 'true'/*'false'*/)
SELECT * FROM @tempB
-----------------------------------------------------------------------------------------------
--22.	Создать локальную таблицу с названием TEMP и полями типа дата/время, длинное целое, 
--строка. Добавить в нее две записи с дан-ными и вывести результат на экран. 
-----------------------------------------------------------------------------------------------
--23.Создать локальную таблицу с названием TEMP и полями типа дата/время, длинное целое 
--с автонаращиванием, динамическая строка. Добавить в нее две записи с данными и вывести результат на экран. 
SET DATEFORMAT dmy
DECLARE @tempC TABLE(date1 Date, val6 INT identity(10,2), val7 VARCHAR(30) default 'INSERT SOMETHING...')
	INSERT INTO @tempC(date1) VALUES ('30.11.1987');
	INSERT INTO @tempC(date1,val7) VALUES ('14.06.2016','my birthday');
SELECT * FROM @tempC
-----------------------------------------------------------------------------------------------
--Преобразование типов переменных
-----------------------------------------------------------------------------------------------
--24.	Объявить переменные типа FLOAT, CHAR, TINYINT. Присво-ить значения, соответствующие 
--типам. Выполнить преобразование пе-ременных типа FLOAT, CHAR, TINYINT в INT, DATETIME, 
--BIT со-ответственно и вывести результат на экран. 
DECLARE @a1 FLOAT, @a2 CHAR(30),@a3 TINYINT   
SET @a1 = 12.35
SET @a2 = '26.06.2015'    
SET @a3 = 1      
SELECT CAST(@a1 AS INT) AS INT1
SELECT CAST(@a2 AS DATETIME) AS DATETIME1
SELECT CAST(@a3 AS BIT) AS BIT1
-----------------------------------------------------------------------------------------------
--25.	Объявить переменные типа INT, DATETIME, BIT. Присвоить значения, соответствующие типам. 
--Выполнить преобразование пере-менных типа INT, DATETIME, BIT в FLOAT, CHAR, TINYINT 
--соответ-ственно и вывести результат на экран. 
DECLARE @b1 INT, @b2 DATE,@b3 BIT   
SET @b1 = 1235
SET @b2 = '26.06.2015'    
SET @b3 = 'true'   
SELECT CAST(@b1 AS FLOAT) AS FLOAT1
SELECT CAST(@b2 AS CHAR) AS CHAR1
SELECT CAST(@b3 AS TINYINT) AS TINYINT1
-----------------------------------------------------------------------------------------------
--26.	Объявить переменные типа NUMERIC, VARCHAR, DATETIME. 
--Присвоить значения, соответствующие типам. Выполнить преобразо-вание переменных типа 
--NUMERIC, VARCHAR, DATETIME в FLOAT, CHAR, BIGINT соответственно и вывести результат на экран. 
DECLARE @c1 NUMERIC(10,4), @c2 VARCHAR(30),@c3 DATETIME   
SET @c1 = 12.5484935
SET @c2 = 'OLEGP'    
SET @c3 = '26.06.2015'   
SELECT CAST(@c1 AS FLOAT) AS FLOAT1
SELECT CAST(@c2 AS CHAR) AS CHAR1
SELECT CAST(@c3 AS BIGINT) AS BIGINT1
-----------------------------------------------------------------------------------------------
--27.	Объявить переменные типа BIT, NVARCHAR, DATETIME. Присвоить значения, соответствующие типам. 
--Выполнить преобразование переменных типа BIT, NVARCHAR, DATETIME в FLOAT, INT, BIGINT 
--соответственно и вывести результат на экран. 
DECLARE @d1 BIT, @d2 NVARCHAR(30),@d3 DATETIME   
SET @d1 = 12.5484935
SET @d2 = '123657880'    
SET @d3 = '26.06.2015'   
SELECT CAST(@d1 AS FLOAT) AS FLOAT1
SELECT CAST(@d2 AS INT) AS INT1
SELECT CAST(@d3 AS BIGINT) AS BIGINT1




